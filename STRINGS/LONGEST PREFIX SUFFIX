
public class LongestPrefixSuffix {

    public static void main(String[] args) {
        // METHOD - 1 => USING LPS ARRAYS
        // String s = "abab";
        // int n = s.length();
        // int lps[] = new int[n];
        // lps[0] = 0;
        // int len = 0;
        // int i = 1;
        // while (i < n) {
        //     if (s.charAt(i) == s.charAt(len)) {
        //         len++;
        //         lps[i] = len;
        //         i++;
        //     } else if (i < n && s.charAt(i) != s.charAt(len)) {
        //         if (len != 0) {
        //             len = lps[len - 1];
        //         } else {
        //             lps[i] = 0;
        //             i++;
        //         }
        //     }
        // }
        // System.out.println(s.substring(0, lps[n - 1]));
        // TIME COMPLEXITY => O(n)
        // SPACE COMPLEXITY => O(n)

        // METHOD - 2 => IT CHECKS THE LEN OF PREFIX WITH LEN OF SUFFIX
        String str = "abab";
        int n = str.length();
        for (int i = n - 1; i >= 1; i--) {
            boolean match = true;
            for (int j = 0; j < i; j++) {
                if (str.charAt(j) != str.charAt(n - i + j)) {
                    match = false;
                    break;
                }
            }
            if (match) {
                System.out.println(str.substring(0, i));
                return;
            }
        }

        // TIME COMPLEXITY => O(n^2)
        // SPACE COMPLEXITY => O(1)
    }
}
