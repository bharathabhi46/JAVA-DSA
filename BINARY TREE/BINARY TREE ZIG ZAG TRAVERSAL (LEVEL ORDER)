
import java.util.*;

public class BinaryTreeZigZagLevelOrderTraversal {

    static class TreeNode {

        int val;
        TreeNode left;
        TreeNode right;

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }
    }

    static class Solution {

        public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
            List<List<Integer>> res = new ArrayList<>();
            if (root == null) {
                return res;
            }

            Queue<TreeNode> q = new LinkedList<>();
            q.add(root);
            q.add(null);

            LinkedList<Integer> l = new LinkedList<>();
            boolean leftToRight = true;

            while (!q.isEmpty()) {
                TreeNode cur = q.remove();
                if (cur == null) {
                    res.add(new ArrayList<>(l));
                    l.clear();
                    if (!q.isEmpty()) {
                        q.add(null);
                    }
                    leftToRight = !leftToRight;
                } else {
                    if (leftToRight) {
                        l.addLast(cur.val);
                    } else {
                        l.addFirst(cur.val);
                    }
                    if (cur.left != null) {
                        q.add(cur.left);
                    }
                    if (cur.right != null) {
                        q.add(cur.right);
                    }
                }
            }

            return res;
        }
    }

    public static void main(String[] args) {
        TreeNode root = new TreeNode(1,
                new TreeNode(2, new TreeNode(4), new TreeNode(5)),
                new TreeNode(3, null, new TreeNode(6))
        );

        Solution sol = new Solution();
        List<List<Integer>> result = sol.zigzagLevelOrder(root);

        System.out.println("Zigzag Level Order Traversal:");
        for (List<Integer> level : result) {
            System.out.println(level);
        }
    }
}
