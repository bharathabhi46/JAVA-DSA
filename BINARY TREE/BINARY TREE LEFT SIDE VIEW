
import java.util.*;

public class RightViewOfTheTree {

    static class TreeNode {

        int val;
        TreeNode left, right;

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }
    }

    public static List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        if (root == null) {
            return res;
        }

        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        q.add(null);
        TreeNode lastNode = null;

        while (!q.isEmpty()) {
            TreeNode cur = q.remove();
            if (cur == null) {
                if (lastNode != null) {
                    res.add(lastNode.val);
                }
                if (!q.isEmpty()) {
                    q.add(null);
                }
            } else {
                lastNode = cur;
                if (cur.left != null) {
                    q.add(cur.left);
                }
                if (cur.right != null) {
                    q.add(cur.right);
                }
            }
        }

        return res;
    }

    public static void main(String[] args) {
        // Tree:
        //      1
        //     / \
        //    2   3
        //     \   \
        //      5   4
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2, null, new TreeNode(5));
        root.right = new TreeNode(3, null, new TreeNode(4));

        List<Integer> result = rightSideView(root);

        System.out.println("Right Side View:");
        for (int val : result) {
            System.out.print(val + " ");
        }
    }
}
