
import java.util.*;

public class CommonEleInAllRows {

    public static Set<Integer> solveComEle(int arr[][]) {
        int n = arr.length;
        int m = arr[0].length;
        Map<Integer, Integer> freq = new HashMap<>();

        for (int i = 0; i < n; i++) {
            Set<Integer> rowSet = new HashSet<>();  // To avoid duplicates in the same row
            for (int j = 0; j < m; j++) {
                rowSet.add(arr[i][j]);
            }

            for (int num : rowSet) {
                freq.put(num, freq.getOrDefault(num, 0) + 1);
            }
        }

        Set<Integer> result = new HashSet<>();
        for (Map.Entry<Integer, Integer> entry : freq.entrySet()) {
            if (entry.getValue() == n) {
                result.add(entry.getKey());
            }
        }

        return result;
    }

    // public static HashSet solveComEle(int arr[][]) {
    //     int n = arr.length;
    //     int m = arr[0].length;
    //     int ele = 0;
    //     HashSet<Integer> set = new HashSet<>();
    //     for (int j = 0; j < m; j++) {
    //         ele = arr[0][j];
    //         set.add(ele);
    //     }
    //     for (int i = 1; i < n; i++) {
    //         HashSet<Integer> re = new HashSet<>();
    //         for (int j = 0; j < m; j++) {
    //             re.add(arr[i][j]);
    //         }
    //         set.retainAll(re);
    //     }
    //     return set;
    // }
    public static void main(String args[]) {
        int arr[][] = {{1, 2, 1, 4, 8},
        {3, 7, 8, 5, 1},
        {8, 7, 7, 3, 1},
        {8, 1, 2, 7, 9},};
        System.out.println(solveComEle(arr));
    }
}
