
import java.util.Arrays;

// import java.util.HashSet;
public class TripletSum {

    // METHOD - 1 => USING THE HASH SET 
    // public static boolean FindTriplet(int arr[], int sum) {
    //     int n = arr.length;
    //     for (int i = 0; i < n - 2; i++) {
    //         HashSet<Integer> set = new HashSet<>();
    //         int curEle = sum - arr[i];
    //         for (int j = i + 1; j < n; j++) {
    //             if (set.contains(curEle - arr[j])) {
    //                 return true;
    //             }
    //             set.add(arr[j]);
    //         }
    //     }
    //     return false;
    // }
    // TIME COMPLEXITY => O(n^2)
    //SPACE COMPLEXITY => O(n)
    // METHOD - 2 => USING THE SORTED + TWO POINTERS
    public static boolean FindTriplet(int arr[], int target) {
        int n = arr.length;
        Arrays.sort(arr);
        for (int i = 0; i < n - 2; i++) {
            int l = i + 1;
            int h = n - 1;
            while (l <= h) {
                int sum = arr[i] + arr[l] + arr[h];
                if (sum == target) {
                    return true;
                } else if (sum < target) {
                    l++;
                } else {
                    h--;
                }
            }
        }
        return false;
    }
    // TIME COMPLEXITY => O(n^2)
    // SPACE COMPLEXITY => O(1)

    public static void main(String args[]) {
        int arr[] = {1, 4, 45, 6, 10, 8};
        int target = 55;
        // System.out.println(FindTriplet(arr, sum));
        System.out.print(FindTriplet(arr, target));

    }
}
