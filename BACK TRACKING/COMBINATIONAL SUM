
import java.util.*;

public class CombinationalSum {

    public static List<List<Integer>> solveSum(int nos[], int target) {
        List<List<Integer>> result = new ArrayList<>();
        SolveCombinationSum(nos, target, result, new ArrayList<>(), 0);
        return result;
    }

    public static void SolveCombinationSum(int nos[], int target, List<List<Integer>> result, List<Integer> cur, int index) {
        if (target == 0) {
            result.add(new ArrayList<>(cur));
            return;
        }
        if (target < 0 || index >= nos.length) {
            return;
        }
        cur.add(nos[index]);
        SolveCombinationSum(nos, target - nos[index], result, cur, index);
        cur.remove(cur.size() - 1);
        SolveCombinationSum(nos, target, result, cur, index + 1);
    }

    public static void main(String args[]) {
        int nos[] = {2, 3, 6, 7};
        int target = 7;
        System.out.println(solveSum(nos, target));
    }
}
