
import java.util.*;

public class PermutationOfString {

    public static List<String> perStr(String s) {
        List<String> p = new ArrayList<>();
        char arr[] = s.toCharArray();
        Arrays.sort(arr);
        p.add(new String(arr));
        while (nextPer(arr)) {
            p.add(new String(arr));
        }
        return p;
    }

    public static boolean nextPer(char arr[]) {
        int i = arr.length - 1;
        while (i > 0 && arr[i - 1] >= arr[i]) {
            i--;
        }
        if (i <= 0) {
            return false;
        }
        int j = arr.length - 1;
        while (arr[j] <= arr[i - 1]) {
            j--;
        }

        swap(arr, i - 1, j);
        rev(arr, i, arr.length - 1);
        return true;
    }

    public static void swap(char arr[], int i, int j) {
        char temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public static void rev(char arr[], int i, int j) {
        while (i < j) {
            swap(arr, i++, j--);
        }
    }

    public static void main(String[] args) {
        String s = "abc";
        System.out.println(perStr(s));
    }
}
