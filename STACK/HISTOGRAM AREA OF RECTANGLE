
import java.util.*;

public class LargestAreaOfRectangleInHistogram {

    public static int largestRectangleArea(int[] heights) {
        int n = heights.length;
        int[] left = new int[n];   // index of previous smaller
        int[] right = new int[n];  // index of next smaller

        Stack<Integer> stack = new Stack<>();

        // Step 1: Find Previous Smaller to Left (PSL)
        for (int i = 0; i < n; i++) {
            while (!stack.isEmpty() && heights[stack.peek()] >= heights[i]) {
                stack.pop();
            }
            left[i] = stack.isEmpty() ? -1 : stack.peek();
            stack.push(i);
        }

        // Clear stack for next use
        stack.clear();

        // Step 2: Find Next Smaller to Right (NSR)
        for (int i = n - 1; i >= 0; i--) {
            while (!stack.isEmpty() && heights[stack.peek()] >= heights[i]) {
                stack.pop();
            }
            right[i] = stack.isEmpty() ? n : stack.peek();
            stack.push(i);
        }

        // Step 3: Calculate max area
        int maxArea = 0;
        for (int i = 0; i < n; i++) {
            int width = right[i] - left[i] - 1;
            int area = heights[i] * width;
            maxArea = Math.max(maxArea, area);
        }

        return maxArea;
    }

    public static void main(String[] args) {
        int[] arr = {2, 1, 5, 6, 2, 3};
        System.out.println("Maximum Area: " + largestRectangleArea(arr));
    }
}
