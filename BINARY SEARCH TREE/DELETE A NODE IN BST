public class DeleteANodeInBst {
    public static class TreeNode {
        int val;
        TreeNode left, right;
        TreeNode() {}
        TreeNode(int val) { this.val = val; }
        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }
    }

    public static class Solution {
        public static TreeNode inorderSuccessor(TreeNode root) {
            while (root.left != null) {
                root = root.left;
            }
            return root;
        }

        public TreeNode deleteNode(TreeNode root, int key) {
            if (root == null) return null;
            if (key < root.val) {
                root.left = deleteNode(root.left, key);
            } else if (key > root.val) {
                root.right = deleteNode(root.right, key);
            } else {
                if (root.left == null && root.right == null) return null;
                if (root.left == null) return root.right;
                if (root.right == null) return root.left;
                TreeNode ins = inorderSuccessor(root.right);
                root.val = ins.val;
                root.right = deleteNode(root.right, ins.val);
            }
            return root;
        }

        public void inorder(TreeNode root) {
            if (root != null) {
                inorder(root.left);
                System.out.print(root.val + " ");
                inorder(root.right);
            }
        }
    }

    public static void main(String[] args) {
        TreeNode root = new TreeNode(5);
        root.left = new TreeNode(3);
        root.right = new TreeNode(6);
        root.left.left = new TreeNode(2);
        root.left.right = new TreeNode(4);
        root.right.right = new TreeNode(7);

        Solution sol = new Solution();
        System.out.print("Before Deletion (Inorder): ");
        sol.inorder(root);
        System.out.println();

        int key = 3;
        root = sol.deleteNode(root, key);

        System.out.print("After Deletion (Inorder): ");
        sol.inorder(root);
    }
}
